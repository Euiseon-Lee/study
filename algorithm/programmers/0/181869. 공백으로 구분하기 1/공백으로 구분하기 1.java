class Solution {
    public String[] solution(String my_string) {
        /**
         * ✅ 문제 요약  
         *  - 문자열 `my_string`을 공백 `" "` 기준으로 나누어 문자열 배열로 반환  
         *
         * 🔁 로직 구조  
         *  - `String.split(" ")` 메서드를 사용하여 공백 기준으로 분리  
         *  - 분리된 각 단어를 배열로 반환  
         *
         * ✅ 코드 품질 측면  
         *  - 불필요한 반복문 없이 표준 라이브러리 메서드로 명확하게 해결  
         *  - Java의 `split(String regex)`는 정규표현식을 인자로 받는다는 점 주의 필요  
         *
         * ⚠️ 주의할 점 (실무 팁)  
         *  - `split(" ")`은 정확히 **하나의 공백만** 기준으로 작동함  
         *    - 예: `"a  b c"` → `["a", "", "b", "c"]`  
         *  - **여러 개의 공백도 하나처럼 처리하고 싶다면** `split("\\s+")` 또는 `split(" +")` 사용 필요  
         *
         * ⚙️ 성능 분석  
         *  - 시간복잡도: O(n), 문자열을 한 번 순회하면서 토큰 분리  
         *  - 공간복잡도: O(k), k는 분리된 문자열의 수  
         *  - 테스트 결과: 0.02ms ~ 0.16ms, 모든 케이스에서 매우 빠르게 통과  
         *
         * 🛠 실무 활용도  
         *  - 로그 파싱, 명령어 분할, 텍스트 전처리 등 다양한 곳에서 사용됨  
         *  - 다만 실무에서는 trim(), 정규표현식 처리까지 같이 고려해야 안전함  
         *    - 예: `.trim().split("\\s+")` → 모든 공백 제거 + 공백 기준 분리  
         */
        return my_string.split(" ");
    }
}
